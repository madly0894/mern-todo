[{"/var/www/html/mern-todo/client/src/reportWebVitals.js":"1","/var/www/html/mern-todo/client/src/components/TableComponent.js":"2","/var/www/html/mern-todo/client/src/screens/Main.js":"3","/var/www/html/mern-todo/client/src/api/axios.js":"4","/var/www/html/mern-todo/client/src/components/FormComponent.js":"5","/var/www/html/mern-todo/client/src/components/DialogComponent.js":"6","/var/www/html/mern-todo/client/src/components/ActionComponent.js":"7","/var/www/html/mern-todo/client/src/App.js":"8","/var/www/html/mern-todo/client/src/index.js":"9","/var/www/html/mern-todo/client/src/store/index.js":"10","/var/www/html/mern-todo/client/src/store/db.js":"11","/var/www/html/mern-todo/client/src/store/reducers/rootReducer.js":"12","/var/www/html/mern-todo/client/src/utils/helpers.js":"13"},{"size":362,"mtime":1607359521085,"results":"14","hashOfConfig":"15"},{"size":7844,"mtime":1607390149367,"results":"16","hashOfConfig":"15"},{"size":1085,"mtime":1607378933909,"results":"17","hashOfConfig":"15"},{"size":107,"mtime":1607375148636,"results":"18","hashOfConfig":"15"},{"size":12573,"mtime":1607396365876,"results":"19","hashOfConfig":"15"},{"size":3789,"mtime":1607395213010,"results":"20","hashOfConfig":"15"},{"size":1661,"mtime":1607390550904,"results":"21","hashOfConfig":"15"},{"size":173,"mtime":1607371902193,"results":"22","hashOfConfig":"15"},{"size":600,"mtime":1607392473238,"results":"23","hashOfConfig":"15"},{"size":458,"mtime":1607392478474,"results":"24","hashOfConfig":"15"},{"size":1060,"mtime":1607394692265,"results":"25","hashOfConfig":"15"},{"size":208,"mtime":1607392030170,"results":"26","hashOfConfig":"15"},{"size":285,"mtime":1607394008192,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1l6747y",{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/mern-todo/client/src/reportWebVitals.js",[],["58","59"],"/var/www/html/mern-todo/client/src/components/TableComponent.js",["60","61","62","63","64","65"],"import React, {useEffect} from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport ActionComponent from \"./ActionComponent\";\n\nfunction EnhancedTableHead({ headCells }) {\n    return (\n        <TableHead>\n            <TableRow style={{borderBottom: '2px solid rgba(0, 0, 0, .4)'}}>\n                <TableCell padding=\"checkbox\">\n                    <Typography style={{textAlign: 'center'}}>#</Typography>\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align=\"center\"\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                    >\n                        {headCell.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        cursor: 'pointer',\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        }\n    }\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%'\n    },\n    grid: {\n        flexGrow: 1,\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    button: {\n        width: 200\n    }\n}));\n\nexport default function TableComponent({ rows, headCells }) {\n    const classes = useStyles();\n    const [selected, setSelected] = React.useState([]);\n    const [selectedRow, setSelectedRow] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (row, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelectedRow(row);\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper elevation={0} className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size='medium'\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            headCells={headCells}\n                            classes={classes}\n                            numSelected={selected.length}\n                            onSelectAllClick={handleSelectAllClick}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row._id);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <StyledTableRow\n                                            hover\n                                            onClick={(event) => handleClick(row, row._id)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row._id}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked={isItemSelected}\n                                                    inputProps={{'aria-labelledby': labelId}}\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"center\">{row._id}</TableCell>\n                                            <TableCell align=\"center\">{`${row.firstName} ${row.lastName}`}</TableCell>\n                                            <TableCell align=\"center\">{row.role.title}</TableCell>\n                                            <TableCell align=\"center\">{row.businessLocation.title}</TableCell>\n                                            <TableCell align=\"center\">{row.workEmail}</TableCell>\n                                            <TableCell align=\"center\">{row.workPhone}</TableCell>\n                                            <TableCell align=\"center\">{row.hourlyRate}</TableCell>\n                                        </StyledTableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{height: 53 * emptyRows}}>\n                                    <TableCell colSpan={8}/>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <ActionComponent selectedRow={selectedRow} selected={selected} />\n                {/*<TablePagination*/}\n                {/*    rowsPerPageOptions={[5, 10, 25]}*/}\n                {/*    component=\"div\"*/}\n                {/*    count={rows.length}*/}\n                {/*    rowsPerPage={rowsPerPage}*/}\n                {/*    page={page}*/}\n                {/*    onChangePage={handleChangePage}*/}\n                {/*    onChangeRowsPerPage={handleChangeRowsPerPage}*/}\n                {/*/>*/}\n            </Paper>\n        </div>\n    );\n}\n",["66","67"],"/var/www/html/mern-todo/client/src/screens/Main.js",[],"/var/www/html/mern-todo/client/src/api/axios.js",[],"/var/www/html/mern-todo/client/src/components/FormComponent.js",[],"/var/www/html/mern-todo/client/src/components/DialogComponent.js",[],"/var/www/html/mern-todo/client/src/components/ActionComponent.js",[],"/var/www/html/mern-todo/client/src/App.js",[],"/var/www/html/mern-todo/client/src/index.js",[],["68","69"],"/var/www/html/mern-todo/client/src/store/index.js",[],"/var/www/html/mern-todo/client/src/store/db.js",[],"/var/www/html/mern-todo/client/src/store/reducers/rootReducer.js",[],"/var/www/html/mern-todo/client/src/utils/helpers.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":23},{"ruleId":"74","severity":1,"message":"79","line":13,"column":8,"nodeType":"76","messageId":"77","endLine":13,"endColumn":12},{"ruleId":"74","severity":1,"message":"80","line":14,"column":8,"nodeType":"76","messageId":"77","endLine":14,"endColumn":14},{"ruleId":"74","severity":1,"message":"81","line":114,"column":11,"nodeType":"76","messageId":"77","endLine":114,"endColumn":27},{"ruleId":"74","severity":1,"message":"82","line":118,"column":11,"nodeType":"76","messageId":"77","endLine":118,"endColumn":34},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"70","replacedBy":"85"},{"ruleId":"72","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'TablePagination' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.",["87"],["88"],["87"],["88"],"no-global-assign","no-unsafe-negation"]