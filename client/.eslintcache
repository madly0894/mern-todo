[{"/var/www/html/mern-todo/client/src/reportWebVitals.js":"1","/var/www/html/mern-todo/client/src/components/TableComponent.js":"2","/var/www/html/mern-todo/client/src/screens/Main.js":"3","/var/www/html/mern-todo/client/src/api/axios.js":"4","/var/www/html/mern-todo/client/src/components/FormComponent.js":"5","/var/www/html/mern-todo/client/src/components/DialogComponent.js":"6","/var/www/html/mern-todo/client/src/components/ActionComponent.js":"7","/var/www/html/mern-todo/client/src/App.js":"8","/var/www/html/mern-todo/client/src/index.js":"9","/var/www/html/mern-todo/client/src/store/index.js":"10","/var/www/html/mern-todo/client/src/store/db.js":"11","/var/www/html/mern-todo/client/src/store/reducers/rootReducer.js":"12","/var/www/html/mern-todo/client/src/utils/helpers.js":"13","/var/www/html/mern-todo/client/src/store/actions/actions.js":"14","/var/www/html/mern-todo/client/src/store/reducers/reducers.js":"15","/var/www/html/mern-todo/client/src/store/reducers/settings.js":"16","/var/www/html/mern-todo/client/src/components/LoadingComponent.js":"17"},{"size":362,"mtime":1607350171047,"results":"18","hashOfConfig":"19"},{"size":8406,"mtime":1607431274297,"results":"20","hashOfConfig":"19"},{"size":1085,"mtime":1607378933909,"results":"21","hashOfConfig":"19"},{"size":125,"mtime":1607416200606,"results":"22","hashOfConfig":"19"},{"size":11590,"mtime":1607416200606,"results":"23","hashOfConfig":"19"},{"size":4202,"mtime":1607425276635,"results":"24","hashOfConfig":"19"},{"size":2626,"mtime":1607431497139,"results":"25","hashOfConfig":"19"},{"size":173,"mtime":1607416200606,"results":"26","hashOfConfig":"19"},{"size":600,"mtime":1607392473238,"results":"27","hashOfConfig":"19"},{"size":458,"mtime":1607416200610,"results":"28","hashOfConfig":"19"},{"size":1060,"mtime":1607394692265,"results":"29","hashOfConfig":"19"},{"size":208,"mtime":1607416200610,"results":"30","hashOfConfig":"19"},{"size":285,"mtime":1607416200610,"results":"31","hashOfConfig":"19"},{"size":3312,"mtime":1607424250047,"results":"32","hashOfConfig":"19"},{"size":1605,"mtime":1607399351448,"results":"33","hashOfConfig":"19"},{"size":667,"mtime":1607424577475,"results":"34","hashOfConfig":"19"},{"size":694,"mtime":1607417830008,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1l6747y",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/mern-todo/client/src/reportWebVitals.js",[],["75","76"],"/var/www/html/mern-todo/client/src/components/TableComponent.js",["77"],"/var/www/html/mern-todo/client/src/screens/Main.js",[],"/var/www/html/mern-todo/client/src/api/axios.js",[],"/var/www/html/mern-todo/client/src/components/FormComponent.js",["78","79","80","81"],"import React from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport db from \"../store/db\";\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        textTransform: 'uppercase',\n        fontWeight: 700\n    },\n    divider: {\n        margin: theme.spacing(1, 0),\n    },\n    item: {\n        margin: theme.spacing(1, 0),\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            margin: theme.spacing(0),\n        }\n    },\n    title: {\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(1, 0)\n        }\n    },\n    headline: {\n        marginTop: theme.spacing(2),\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(2)\n        }\n    },\n    select: {\n        [theme.breakpoints.down('sm')]: {\n            width: 229\n        }\n    },\n    placeholder: {\n        color: \"#aaa\"\n    }\n}));\n\n\nconst Placeholder = ({ children }) => {\n    const classes = useStyles();\n\n    return <div className={classes.placeholder}>{children}</div>;\n};\n\n\nconst FormComponent = ({form, handleChangeForm}) => {\n    const classes = useStyles();\n\n    const {businessLocations, companies, roles} = db;\n\n    return (\n        <form noValidate autoComplete=\"off\">\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n                <Grid container direction=\"column\" className={classes.headline}>\n                    <Typography className={classes.typography}>Personal</Typography>\n                    <Divider className={classes.divider}/>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>First Name:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <TextField\n                            id=\"id-first-name\"\n                            variant=\"outlined\"\n                            placeholder=\"First Name\"\n                            autoFocus\n                            size=\"small\"\n                            name=\"firstName\"\n                            onChange={handleChangeForm}\n                            value={form.firstName}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Last Name:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <TextField\n                            id=\"id-last-name\"\n                            variant=\"outlined\"\n                            placeholder=\"Last Name\"\n                            size=\"small\"\n                            name=\"lastName\"\n                            onChange={handleChangeForm}\n                            value={form.lastName}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Login:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <TextField\n                            id=\"id-login\"\n                            variant=\"outlined\"\n                            placeholder=\"Login\"\n                            size=\"small\"\n                            name=\"login\"\n                            onChange={handleChangeForm}\n                            value={form.login}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container direction=\"column\" className={classes.headline}>\n                    <Typography className={classes.typography}>Contact</Typography>\n                    <Divider className={classes.divider}/>\n                </Grid>\n                <Grid container justify=\"center\" alignItems=\"center\" item className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Work Phone:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <TextField\n                            id=\"id-work-phone\"\n                            variant=\"outlined\"\n                            placeholder=\"Work Phone\"\n                            size=\"small\"\n                            name=\"workPhone\"\n                            onChange={handleChangeForm}\n                            value={form.workPhone}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Personal Phone:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <TextField\n                            id=\"id-personal-phone\"\n                            variant=\"outlined\"\n                            placeholder=\"Personal Phone\"\n                            size=\"small\"\n                            name=\"personalPhone\"\n                            onChange={handleChangeForm}\n                            value={form.personalPhone}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Work Email:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <TextField\n                            id=\"id-work-email\"\n                            variant=\"outlined\"\n                            placeholder=\"Work Email\"\n                            size=\"small\"\n                            name=\"workEmail\"\n                            onChange={handleChangeForm}\n                            value={form.workEmail}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Personal Email:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <TextField\n                            id=\"id-personal-email\"\n                            variant=\"outlined\"\n                            placeholder=\"Personal Email\"\n                            size=\"small\"\n                            name=\"personalEmail\"\n                            onChange={handleChangeForm}\n                            value={form.personalEmail}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container direction=\"column\" className={classes.headline}>\n                    <Typography className={classes.typography}>Employment</Typography>\n                    <Divider className={classes.divider}/>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Business Location:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <Autocomplete\n                            size=\"small\"\n                            className={classes.select}\n                            id=\"id-business-location\"\n                            options={businessLocations}\n                            value={form.businessLocation}\n                            onChange={(option, value) => {\n                                handleChangeForm(value, 'businessLocation');\n                            }}\n                            getOptionLabel={(option) => option.title}\n                            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Company:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <Autocomplete\n                            size=\"small\"\n                            className={classes.select}\n                            id=\"id-company\"\n                            options={companies}\n                            value={form.company}\n                            onChange={(option, value) => {\n                                handleChangeForm(value, 'company');\n                            }}\n                            getOptionLabel={(option) => option.title}\n                            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Role:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <Autocomplete\n                            size=\"small\"\n                            className={classes.select}\n                            id=\"id-role\"\n                            options={roles}\n                            value={form.role}\n                            onChange={(option, value) => {\n                                handleChangeForm(value, 'role');\n                            }}\n                            getOptionLabel={(option) => option.title}\n                            renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"center\" className={classes.item}>\n                    <Grid item xs sm={5} className={classes.title}>\n                        <Typography>Hourly Rate:</Typography>\n                    </Grid>\n                    <Grid item xs sm={5}>\n                        <TextField\n                            id=\"id-hourly-rate\"\n                            variant=\"outlined\"\n                            placeholder=\"Hourly Rate\"\n                            size=\"small\"\n                            name=\"hourlyRate\"\n                            onChange={handleChangeForm}\n                            value={form.hourlyRate}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nexport default FormComponent;",["82","83"],"/var/www/html/mern-todo/client/src/components/DialogComponent.js",[],"/var/www/html/mern-todo/client/src/components/ActionComponent.js",[],"/var/www/html/mern-todo/client/src/App.js",[],"/var/www/html/mern-todo/client/src/index.js",[],["84","85"],"/var/www/html/mern-todo/client/src/store/index.js",[],["86","87"],"/var/www/html/mern-todo/client/src/store/db.js",[],"/var/www/html/mern-todo/client/src/store/reducers/rootReducer.js",[],"/var/www/html/mern-todo/client/src/utils/helpers.js",[],"/var/www/html/mern-todo/client/src/store/actions/actions.js",[],"/var/www/html/mern-todo/client/src/store/reducers/reducers.js",[],"/var/www/html/mern-todo/client/src/store/reducers/settings.js",[],"/var/www/html/mern-todo/client/src/components/LoadingComponent.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":89,"column":12,"nodeType":"94","messageId":"95","endLine":89,"endColumn":19},{"ruleId":"92","severity":1,"message":"96","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":19},{"ruleId":"92","severity":1,"message":"97","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":14},{"ruleId":"92","severity":1,"message":"98","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":16},{"ruleId":"92","severity":1,"message":"99","line":50,"column":7,"nodeType":"94","messageId":"95","endLine":50,"endColumn":18},{"ruleId":"88","replacedBy":"100"},{"ruleId":"90","replacedBy":"101"},{"ruleId":"88","replacedBy":"102"},{"ruleId":"90","replacedBy":"103"},{"ruleId":"88","replacedBy":"104"},{"ruleId":"90","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Placeholder' is assigned a value but never used.",["106"],["107"],["106"],["107"],["106"],["107"],"no-global-assign","no-unsafe-negation"]