[{"/var/www/html/mern-todo/client/src/reportWebVitals.js":"1","/var/www/html/mern-todo/client/src/components/TableComponent.js":"2","/var/www/html/mern-todo/client/src/screens/Main.js":"3","/var/www/html/mern-todo/client/src/api/axios.js":"4","/var/www/html/mern-todo/client/src/components/FormComponent.js":"5","/var/www/html/mern-todo/client/src/components/DialogComponent.js":"6","/var/www/html/mern-todo/client/src/components/ActionComponent.js":"7","/var/www/html/mern-todo/client/src/App.js":"8","/var/www/html/mern-todo/client/src/index.js":"9","/var/www/html/mern-todo/client/src/store/index.js":"10","/var/www/html/mern-todo/client/src/store/db.js":"11","/var/www/html/mern-todo/client/src/utils/helpers.js":"12","/var/www/html/mern-todo/client/src/store/actions/todo.js":"13","/var/www/html/mern-todo/client/src/components/LoadingComponent.js":"14","/var/www/html/mern-todo/client/src/components/NotificationComponent.js":"15","/var/www/html/mern-todo/client/src/components/SnackbarProviderComponent.js":"16","/var/www/html/mern-todo/client/src/store/types.js":"17","/var/www/html/mern-todo/client/src/store/reducers/todo.js":"18","/var/www/html/mern-todo/client/src/store/reducers/rootReducer.js":"19","/var/www/html/mern-todo/client/src/store/reducers/settings.js":"20","/var/www/html/mern-todo/client/src/store/actions/settings.js":"21","/var/www/html/mern-todo/client/src/store/actions/notifications.js":"22"},{"size":362,"mtime":1607359521085,"results":"23","hashOfConfig":"24"},{"size":8802,"mtime":1607509802684,"results":"25","hashOfConfig":"24"},{"size":1277,"mtime":1607481024062,"results":"26","hashOfConfig":"24"},{"size":102,"mtime":1607503016528,"results":"27","hashOfConfig":"24"},{"size":15177,"mtime":1607513827621,"results":"28","hashOfConfig":"24"},{"size":5900,"mtime":1607514092539,"results":"29","hashOfConfig":"24"},{"size":2786,"mtime":1607513724062,"results":"30","hashOfConfig":"24"},{"size":177,"mtime":1607503750601,"results":"31","hashOfConfig":"24"},{"size":730,"mtime":1607451044991,"results":"32","hashOfConfig":"24"},{"size":458,"mtime":1607482575695,"results":"33","hashOfConfig":"24"},{"size":565,"mtime":1607478452705,"results":"34","hashOfConfig":"24"},{"size":434,"mtime":1607471896592,"results":"35","hashOfConfig":"24"},{"size":4191,"mtime":1607512520759,"results":"36","hashOfConfig":"24"},{"size":747,"mtime":1607511009817,"results":"37","hashOfConfig":"24"},{"size":3714,"mtime":1607489286480,"results":"38","hashOfConfig":"24"},{"size":1024,"mtime":1607505717818,"results":"39","hashOfConfig":"24"},{"size":588,"mtime":1607451044991,"results":"40","hashOfConfig":"24"},{"size":2380,"mtime":1607510788934,"results":"41","hashOfConfig":"24"},{"size":260,"mtime":1607480966087,"results":"42","hashOfConfig":"24"},{"size":880,"mtime":1607482908873,"results":"43","hashOfConfig":"24"},{"size":245,"mtime":1607485174772,"results":"44","hashOfConfig":"24"},{"size":595,"mtime":1607451044991,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1l6747y",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/mern-todo/client/src/reportWebVitals.js",[],["95","96"],"/var/www/html/mern-todo/client/src/components/TableComponent.js",[],"/var/www/html/mern-todo/client/src/screens/Main.js",[],"/var/www/html/mern-todo/client/src/api/axios.js",[],"/var/www/html/mern-todo/client/src/components/FormComponent.js",[],"/var/www/html/mern-todo/client/src/components/DialogComponent.js",[],"/var/www/html/mern-todo/client/src/components/ActionComponent.js",[],"/var/www/html/mern-todo/client/src/App.js",[],"/var/www/html/mern-todo/client/src/index.js",[],["97","98"],"/var/www/html/mern-todo/client/src/store/index.js",["99"],"import {applyMiddleware, createStore} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport logger from \"redux-logger\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nconst middlewares = [thunk];\n\nif(process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\n\nexport default store;\n","/var/www/html/mern-todo/client/src/store/db.js",[],"/var/www/html/mern-todo/client/src/utils/helpers.js",[],["100","101"],"/var/www/html/mern-todo/client/src/store/actions/todo.js",[],"/var/www/html/mern-todo/client/src/components/LoadingComponent.js",[],"/var/www/html/mern-todo/client/src/components/NotificationComponent.js",["102"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { enqueueSnackbarAction, removeSnackbarAction } from '../store/actions/notifications';\nimport instance from '../api/axios';\n\nlet displayed = [];\n\nconst NotificationComponent = props => {\n    const dispatch = useDispatch();\n    const notifications = useSelector(({ notifications }) => notifications.notifications);\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const enqueueSnackbars = (...args) => dispatch(enqueueSnackbarAction(...args));\n\n    const infoSnackbar = (message = \"Something wen't wrong, please try again!\", variant = 'error') => {\n        enqueueSnackbars({\n            message,\n            options: {\n                variant,\n                key: new Date().getTime() + Math.random()\n            }\n        });\n    };\n\n    React.useEffect(() => {\n        const requestHandler = request => {\n            return request;\n        };\n\n        const responseHandler = response => {\n            if (response.config.method === 'post') {\n                infoSnackbar('You have successfully created!', 'success');\n            } else if (response.config.method === 'put') {\n                infoSnackbar('You have successfully updated!', 'success');\n            } else if (response.config.method === 'delete') {\n                infoSnackbar('You have successfully deleted!', 'success');\n            }\n\n            return response;\n        };\n\n        const myRequestInterceptor = instance.interceptors.request.use(\n            request => requestHandler(request),\n            error => {\n                if (error) {\n                    infoSnackbar();\n                }\n\n                return Promise.reject(error.response);\n            }\n        );\n\n        const myResponseInterceptor = instance.interceptors.response.use(\n            response => responseHandler(response),\n            error => {\n                if (error) {\n                    infoSnackbar();\n                }\n\n                return Promise.reject(error.response);\n            }\n        );\n\n        return () => {\n            instance.interceptors.response.eject(myResponseInterceptor);\n            instance.interceptors.request.eject(myRequestInterceptor);\n        };\n    }, [dispatch, infoSnackbar]);\n\n    const storeDisplayed = id => {\n        displayed = [...displayed, id];\n    };\n\n    const removeDisplayed = id => {\n        displayed = [...displayed.filter(key => id !== key)];\n    };\n\n    React.useEffect(() => {\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\n            if (dismissed) {\n                // dismiss snackbar using notistack\n                closeSnackbar(key);\n                return;\n            }\n\n            // do nothing if snackbar is already displayed\n            if (displayed.includes(key)) return;\n\n            // display snackbar using notistack\n            enqueueSnackbar(message, {\n                key,\n                ...options,\n                onClose: (event, reason, myKey) => {\n                    if (options.onClose) {\n                        options.onClose(event, reason, myKey);\n                    }\n                },\n                onExited: (event, myKey) => {\n                    // remove this snackbar from redux store\n                    dispatch(removeSnackbarAction(myKey));\n                    removeDisplayed(myKey);\n                }\n            });\n\n            // keep track of snackbars that we've displayed\n            storeDisplayed(key);\n        });\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\n\n    return null;\n};\n\nexport default NotificationComponent;\n","/var/www/html/mern-todo/client/src/components/SnackbarProviderComponent.js",[],"/var/www/html/mern-todo/client/src/store/types.js",[],"/var/www/html/mern-todo/client/src/store/reducers/todo.js",[],"/var/www/html/mern-todo/client/src/store/reducers/rootReducer.js",[],"/var/www/html/mern-todo/client/src/store/reducers/settings.js",[],"/var/www/html/mern-todo/client/src/store/actions/settings.js",[],"/var/www/html/mern-todo/client/src/store/actions/notifications.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":9,"column":25,"nodeType":"111","messageId":"112","endLine":9,"endColumn":27},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":16,"column":11,"nodeType":"117","endLine":24,"endColumn":6},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["118"],["119"],"react-hooks/exhaustive-deps","The 'infoSnackbar' function makes the dependencies of useEffect Hook (at line 69) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'infoSnackbar' in its own useCallback() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]